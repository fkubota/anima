<?xml version="1.0" encoding="UTF-8"?>
<schemalist>
  <schema path="/org/gnome/evolution-data-server/" id="org.gnome.evolution-data-server" gettext-domain="evolution-data-server">
    <key type="b" name="migrated">
      <default>false</default>
      <summary>Whether the migration of old setting was already done</summary>
    </key>
    <key type="s" name="camel-gpg-binary">
      <default>''</default>
      <summary>An absolute path where the gpg (or gpg2) binary is</summary>
      <description>An example is “/usr/bin/gpg”; when it is left empty, or an incorrect value is set, then it will be searched for. Change requires restart of the application.</description>
    </key>
    <key type="b" name="camel-cipher-load-photos">
      <default>true</default>
      <summary>Whether to load photos of signers/encrypters</summary>
      <description>When set to “true”, tries to load also photo of the signers/encrypters, if available in the key/certificate.</description>
    </key>
    <key type="s" name="network-monitor-gio-name">
      <default>''</default>
      <summary>GIO name of the GNetworkMonitor to use for an ENetworkMonitor instance</summary>
      <description>When set to an unknown value, then the default GNetworkMonitor is used in the background. A special value “always-online” is used for no network monitoring.</description>
    </key>
    <key type="s" name="autoconfig-directory">
      <default>''</default>
      <summary>A full path to a directory where .source files with preconfigured options can be stored</summary>
      <description>This directory, if filled with an existing path, is checked additionally to XDG configure directories.</description>
    </key>
    <key type="as" name="autoconfig-variables">
      <default>['']</default>
      <summary>A list of variables which can be part of the autoconfig .source files</summary>
      <description>Each item of the array is expected to be of the form: name=value. These variables are checked before environment variables, but after the predefined USER, REALNAME and HOST variables.</description>
    </key>
    <key type="as" name="oauth2-services-hint">
      <default>['']</default>
      <summary>A list of hints for OAuth2 services</summary>
      <description>Users can extend the list of supported protocols and hostnames for defined OAuth2 services, in addition to those hard-coded. Each line can be of the form: servicename[-protocol]:hostname1,hostname2,... where 'servicename' is the actual service name; the '-protocol' is optional, and if written, then the service can be used only if both 'protocol' and 'hostnameX' match; the 'hostnameX' is the actual host name to compare with, case insensitively. Each line can contain multiple values, separated by comma. There can be provided multiple lines for one OAuth2 service. Note that the actual URL where the token is requested and refreshed cannot be changed here, the hostname is to allow other servers, where the OAuth2 service can be used. Examples: Company:mail.company.com - enables 'Company' OAuth2 authentication for 'mail.company.com' host Company-CalDAV:caldav.company.com - enables 'Company' OAuth2 authentication for any 'CalDAV' source, which reads data from 'caldav.company.com' host</description>
    </key>
  </schema>
</schemalist>